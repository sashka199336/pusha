import time  #  импорт модуля времени
import hashlib  #  импорт модуля хеширования


class User:
    def __init__(self, nickname, password, age): # инициализация данных:
        self.nickname = nickname # имя пользователя (строка)
        self.password = self.hash_password(password) # пароль (число)
        self.age = age # возраст (число)

    def hash_password(self, password): # ф-ия принимает пароль в открытом виде
        return hashlib.sha256(password.encode()).hexdigest() #  с помощью метода encode пароль кодируется
    # в байтовую строку - хешируется алгоритмом sha256 с помощью вызова hashlib.sha256().
    # получ значение хеша возвращ в 16-ричной форме с пом метода hexdigest()

    def __eq__(self, other): #
        return self.nickname == other.nickname and self.password == other.password #

    def __str__(self): #
        return f"User(nickname={self.nickname}, age={self.age})" #

class Video: #
    def __init__(self, title, duration, adult_mode=False): #  инициализаця данных:
        self.title = title # заголовок (строка)
        self.duration = duration # продолжительность (секунды)
        self.time_now = 0 # секунда остановки (изначально 0)
        self.adult_mode = adult_mode # ограничение по возрасту, bool (False по умолчанию)

    def __str__(self): #  преобразуем объект в строку
        return f"Video(title={self.title}, duration={self.duration}, adult_mode={self.adult_mode})" #


class UrTube: #
    def __init__(self): #
        self.users = [] # список объектов User
        self.videos = [] # список объектов Video
        self.current_user = None # текущий пользователь, User

    def log_in(self, nickname, password): # ищет пользователя в users с такими же логином и паролем
        for user in self.users: #  перебор пользователей
# если логины совпадают и пароль соответствует ключь - пароль, то
            if user.nickname == nickname and user.password == User(nickname, password, 0).password:
                self.current_user = user #  текущий пользователь меняется на найденного
                return #  если логин или пароль не совпадают, то
        print("Неверные логин или пароль.") # печать сообщения

    def register(self, nickname, password, age): #  метод регистрация
        if any(user.nickname == nickname for user in self.users): # если пользователь существует, то
            print(f"Пользователь {nickname} уже существует") # печатается сообщение
            return
        new_user = User(nickname, password, age)  # присваивает новому пользователю атрибуты
        self.users.append(new_user)  #  добавляет нового пользователя в список
        self.current_user = new_user  # Авто-вход после регистрации

    def log_out(self):  #
        self.current_user = None  #

    def add(self, *videos):  #
        for video in videos:  #
            if not any(v.title == video.title for v in self.videos):  #
                self.videos.append(video)  #

    def get_videos(self, search_word):  #
        search_word = search_word.lower()  #
        return [video.title for video in self.videos if search_word in video.title.lower()]  #

    def watch_video(self, title):  #
        if self.current_user is None: # если пользователь имеет значение None, то:
            print("Войдите в аккаунт, чтобы смотреть видео") # печать сообщения
            return

        video = next((v for v in self.videos if v.title == title), None)  #

        if video is None:
            print("Видео не найдено.")
            return

        if video.adult_mode and self.current_user.age < 18:
            print("Вам нет 18 лет, пожалуйста покиньте страницу")
            return

            # Воспроизведение видео
        while video.time_now < video.duration:
            print(video.time_now + 1, end=' ', flush=True)
            time.sleep(1)  # Эмулируем время воспроизведения
            video.time_now += 1

        print("Конец видео")
        video.time_now = 0  # Сбрасываем время

# Пример использования кода:
ur = UrTube()
v1 = Video('Лучший язык программирования 2024 года', 200)
v2 = Video('Для чего девушкам парень программист?', 10, adult_mode=True)

# Добавление видео
ur.add(v1, v2)

# Проверка поиска
print(ur.get_videos('лучший'))
print(ur.get_videos('ПРОГ'))

# Проверка на вход пользователя и возрастное ограничение
ur.watch_video('Для чего девушкам парень программист?')
ur.register('vasya_pupkin', 'lolkekcheburek', 13)
ur.watch_video('Для чего девушкам парень программист?')
ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)
ur.watch_video('Для чего девушкам парень программист?')

# Проверка входа в другой аккаунт
ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)
print(ur.current_user)

#Попытка воспроизведения несуществующего видео
ur.watch_video('Лучший язык программирования 2024 года!')
